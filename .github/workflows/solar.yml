name: Solar System Unit Tests

on:
    workflow_dispatch: 
    push: 

env:  
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }} 

jobs:
    unit-testing:
        strategy:
          matrix:
            node-version: [18, 20]
            os: [ubuntu-latest, ubuntu-22.04]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
            
            - name: Install NodeJS ${{ matrix.node-version }} on ${{ matrix.os }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.node-version }}

            - name: Install Dependencies and Run Unit Tests
              id: nodeJS-unit-test
              run: |
                npm install
                npm test
            
            - name: Archive Test Results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: Mocha-Test-Result-${{ matrix.node-version}}-${{ matrix.os }}
                path: test-results.xml
    
    code-coverage:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
    
            - name: Setup NodeJS version - 20
              uses: actions/setup-node@v3
              with:
                node-version: 20
            
            - name: Install Dependencies and Run code coverage
              run: |
                  npm install
                  npm run coverage
              continue-on-error: true
    
            - name: Archive Test Result
              uses: actions/upload-artifact@v3
              with:
                name: Code-Coverage-Result
                path: coverage
                retention-days: 5
    
    docker:
        name: docker-login-push
        runs-on: ubuntu-latest
        needs: [code-coverage, unit-testing]
        steps:
          - name: checkout repo
            uses: actions/checkout@v4
          
          - name: Dockerhub Login
            uses: docker/login-action@v2.2.0
            with:
              username: ${{ vars.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}